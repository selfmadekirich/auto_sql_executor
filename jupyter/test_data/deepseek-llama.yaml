test_1: select * from not_exists_table
test_10: SELECT COUNT(*) FROM video_games.game;
test_11: SELECT COUNT(*) FROM video_games.publisher;
test_12: SELECT COUNT(*) FROM video_games.platform;
test_13: SELECT COUNT(*) FROM video_games.region;
test_14: SELECT SUM(num_sales) AS total_sales FROM video_games.region_sales;
test_15: SELECT MIN(release_year) FROM game_platform;
test_16: SELECT MAX(release_year) FROM game_platform WHERE release_year IS NOT NULL;
test_17: SELECT COUNT(*) AS count FROM video_games.platform WHERE platform_name LIKE
  'PS%';
test_18: select * from not_exists_table
test_19: SELECT game_name FROM video_games.game WHERE game_name IS NOT NULL AND LEFT(game_name,
  1) = RIGHT(game_name, 1);
test_2: SELECT genre_name FROM video_games.genre;
test_20: SELECT game_name FROM game WHERE array_length(string_to_array(game_name,
  ' '), 1) >= 2;
test_21: SELECT DISTINCT game_name FROM video_games.game ORDER BY game_name;
test_22: SELECT AVG(num_sales) FROM region_sales WHERE num_sales IS NOT NULL;
test_23: SELECT MAX(num_sales) FROM video_games.region_sales;
test_24: SELECT MIN(num_sales) FROM video_games.region_sales;
test_25: SELECT g.game_name, gen.genre_name FROM game g LEFT JOIN genre gen ON g.genre_id
  = gen.id;
test_26: SELECT p.publisher_name AS Producer, g.game_name AS Game FROM game_publisher
  gp LEFT JOIN publisher p ON gp.publisher_id = p.id LEFT JOIN game g ON gp.game_id
  = g.id;
test_27: SELECT p.publisher_name AS "Publisher", g.game_name AS "Game", ge.genre_name
  AS "Genre" FROM video_games.publisher p INNER JOIN video_games.game_publisher gp
  ON p.id = gp.publisher_id INNER JOIN video_games.game g ON gp.game_id = g.id INNER
  JOIN video_games.genre ge ON g.genre_id = ge.id;
test_28: select * from not_exists_table
test_29: select * from not_exists_table
test_3: SELECT publisher_name FROM video_games.publisher;
test_30: SELECT DISTINCT p.platform_name, r.region_name FROM video_games.platform
  p INNER JOIN video_games.game_platform gp ON p.id = gp.platform_id INNER JOIN video_games.region_sales
  rs ON gp.id = rs.game_platform_id INNER JOIN video_games.region r ON rs.region_id
  = r.id;
test_31: SELECT rg.region_name AS region_name, SUM(rs.num_sales) AS total_sales FROM
  region rg JOIN region_sales rs ON rg.id = rs.region_id GROUP BY rg.region_name ORDER
  BY rg.region_name;
test_32: SELECT r.region_name, MIN(gp.release_year) AS first_release_year FROM video_games.region
  r JOIN video_games.region_sales rs ON r.id = rs.region_id JOIN video_games.game_platform
  gp ON rs.game_platform_id = gp.id GROUP BY r.region_name;
test_33: WITH distinct_platforms AS (SELECT DISTINCT gp.publisher_id, p.platform_name
  FROM video_games.publisher pub JOIN video_games.game_publisher gp ON pub.id = gp.publisher_id
  JOIN video_games.game_platform gpf ON gp.id = gpf.game_publisher_id JOIN video_games.platform
  p ON gpf.platform_id = p.id) SELECT jsonb_build_object('publisher_name', pub.publisher_name,
  'platforms', (SELECT json_agg(pf.platform_name) FROM distinct_platforms pf WHERE
  pf.publisher_id = pub.id)) AS result FROM video_games.publisher pub GROUP BY pub.id,
  pub.publisher_name;
test_34: SELECT g.game_name FROM video_games.game g INNER JOIN video_games.genre gn
  ON g.genre_id = gn.id WHERE gn.genre_name = 'Fighting';
test_35: SELECT game_name FROM game WHERE genre_id NOT IN (SELECT id FROM genre WHERE
  genre_name = 'Adventure');
test_36: 'SELECT DISTINCT g.game_name FROM video_games.game g

  JOIN video_games.game_publisher gp ON g.id = gp.game_id

  JOIN video_games.publisher p ON gp.publisher_id = p.id

  WHERE p.publisher_name = ''3DO Company'';'
test_37: SELECT json_agg(T) FROM ( SELECT platform_name, MIN(release_year) AS first_release_year
  FROM video_games.platform p INNER JOIN video_games.game_platform gp ON p.id = gp.platform_id
  GROUP BY p.platform_name ORDER BY p.platform_name ) T;
test_38: SELECT g.genre_name FROM video_games.genre g LEFT JOIN video_games.game gm
  ON g.id = gm.genre_id GROUP BY g.genre_name ORDER BY COUNT(gm.id) LIMIT 1;
test_39: SELECT g.genre_name, COUNT(game.id) as count FROM video_games.game INNER
  JOIN video_games.genre g ON game.genre_id = g.id GROUP BY g.genre_name ORDER BY
  count DESC LIMIT 1;
test_4: SELECT platform_name FROM video_games.platform;
test_40: 'SELECT r.region_name FROM video_games.region r

  JOIN video_games.region_sales rs ON r.id = rs.region_id

  JOIN video_games.game_platform gp ON rs.game_platform_id = gp.id

  JOIN video_games.platform p ON gp.platform_id = p.id

  WHERE p.platform_name = ''PC''

  GROUP BY r.region_name

  ORDER BY SUM(rs.num_sales) DESC

  LIMIT 1;'
test_41: WITH ps_platforms AS (SELECT id FROM video_games.platform WHERE platform_name
  IN ('PS2', 'PS3')) SELECT region_name FROM video_games.region AS r JOIN video_games.region_sales
  AS rs ON r.id = rs.region_id JOIN video_games.game_platform AS gp ON rs.game_platform_id
  = gp.id WHERE gp.platform_id IN (SELECT id FROM ps_platforms) GROUP BY region_name
  ORDER BY SUM(num_sales) ASC LIMIT 1;
test_42: SELECT DISTINCT r.region_name FROM video_games.region r JOIN video_games.region_sales
  rs ON r.id = rs.region_id JOIN video_games.game_platform gp ON rs.game_platform_id
  = gp.id JOIN video_games.platform p ON gp.platform_id = p.id WHERE p.platform_name
  = 'PC' AND gp.release_year = (SELECT MIN(gp2.release_year) FROM video_games.game_platform
  gp2 JOIN video_games.platform p2 ON gp2.platform_id = p2.id WHERE p2.platform_name
  = 'PC');
test_43: select * from not_exists_table
test_44: select * from not_exists_table
test_45: "WITH sales_cte AS (\n            SELECT \n                r.region_name\
  \ AS region,\n                p.platform_name AS platform,\n                SUM(rs.num_sales)\
  \ AS total_sales\n            FROM \n                region_sales rs\n         \
  \       JOIN region r ON rs.region_id = r.id\n                JOIN game_platform\
  \ gp ON rs.game_platform_id = gp.id\n                JOIN platform p ON gp.platform_id\
  \ = p.id\n            GROUP BY r.region_name, p.platform_name\n        )\n     \
  \   SELECT \n            s1.region_name AS europe,\n            s2.region_name AS\
  \ japan,\n            p.platform_name AS platform,\n            s1.total_sales AS\
  \ europe_sales,\n            s2.total_sales AS japan_sales,\n            s1.total_sales\
  \ - s2.total_sales AS sales_difference\n        FROM \n            sales_cte s1\n\
  \            FULL OUTER JOIN sales_cte s2 ON s1.platform_name = s2.platform_name\n\
  \        WHERE \n            s1.region_name = 'Europe' AND s2.region_name = 'Japan'\n\
  \        ORDER BY \n            p.platform_name, sales_difference DESC;"
test_46: select * from not_exists_table
test_47: SELECT p.publisher_name, COUNT(gp.publisher_id) AS total_games FROM video_games.publisher
  p JOIN video_games.game_publisher gp ON p.id = gp.publisher_id GROUP BY p.publisher_name
  ORDER BY total_games DESC LIMIT 1;
test_48: select * from not_exists_table
test_49: SELECT p.id, p.platform_name, COUNT(gp.id) as game_count FROM video_games.game_platform
  gp JOIN video_games.platform p ON gp.platform_id = p.id GROUP BY p.id, p.platform_name
  ORDER BY game_count DESC;
test_5: SELECT region_name FROM video_games.region;
test_50: select * from not_exists_table
test_6: SELECT genre_name FROM video_games.genre WHERE genre_name ILIKE 'R_%';
test_7: SELECT g.game_name, ge.genre_name FROM video_games.game g INNER JOIN video_games.genre
  ge ON g.genre_id = ge.id WHERE ge.id = 8;
test_8: SELECT * FROM video_games.game WHERE genre_id > 3 AND genre_id < 10;
test_9: SELECT COUNT(*) FROM video_games.genre;
