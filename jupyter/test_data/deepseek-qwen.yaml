test_1: SELECT * FROM video_games.game;
test_10: SELECT COUNT(id) FROM video_games.game;
test_11: SELECT COUNT(*) FROM video_games.publisher;
test_12: SELECT COUNT(*) FROM video_games.platform;
test_13: SELECT COUNT(*) FROM video_games.region;
test_14: SELECT SUM(num_sales) AS total_sales FROM video_games.region_sales;
test_15: SELECT g.game_name, g.genre_name, MIN(gp.release_year) AS first_release_year
  FROM video_games.game g LEFT JOIN video_games.game_platform gp ON g.id = gp.game_id
  LEFT JOIN video_games.genre gn ON g.genre_id = gn.id GROUP BY g.id, g.genre_id ORDER
  BY first_release_year;
test_16: SELECT MAX(release_year) AS latest_release_year FROM video_games.game_platform;
test_17: SELECT COUNT(*) FROM video_games.platform WHERE platform_name LIKE 'PS%'
test_18: SELECT platform_name FROM video_games.platform WHERE platform_name NOT ILIKE
  'W%'
test_19: SELECT game_name FROM video_games.game WHERE left(game_name, 1) = right(game_name,
  1) ORDER BY game_name;
test_2: SELECT * FROM video_games.genre ORDER BY genre_name;
test_20: SELECT g.id, g.game_name FROM video_games.game g WHERE length(g.game_name)
  - length(replace(g.game_name, ' ', '')) >= 1;
test_21: SELECT game_name FROM video_games.game ORDER BY game_name ASC;
test_22: SELECT AVG(num_sales) AS average_sales FROM video_games.region_sales;
test_23: SELECT MAX(num_sales) AS max_sales, g.game_name, p.platform_name FROM video_games.region_sales
  rs JOIN video_games.game_platform gp ON rs.game_platform_id = gp.id JOIN video_games.game_publisher
  gp2 ON gp.game_publisher_id = gp2.id JOIN video_games.game g ON gp2.game_id = g.id
  JOIN video_games.platform p ON gp.platform_id = p.id;
test_24: SELECT MIN(num_sales) FROM video_games.region_sales;
test_25: SELECT g.game_name, ge.genre_name FROM video_games.game g LEFT JOIN video_games.genre
  ge ON g.genre_id = ge.id;
test_26: SELECT p.publisher_name, g.game_name FROM video_games.publisher p LEFT JOIN
  video_games.game_publisher gp ON p.id = gp.publisher_id LEFT JOIN video_games.game
  g ON gp.game_id = g.id GROUP BY p.publisher_name, g.game_name ORDER BY p.publisher_name;
test_27: SELECT p.publisher_name, g.game_name, gen.genre_name FROM video_games.publisher
  p INNER JOIN video_games.game_publisher gp ON p.id = gp.publisher_id INNER JOIN
  video_games.game g ON gp.game_id = g.id INNER JOIN video_games.genre gen ON g.genre_id
  = gen.id;
test_28: select * from not_exists_table
test_29: select * from not_exists_table
test_3: SELECT * FROM video_games.publisher;
test_30: SELECT DISTINCT ON (p.platform_name, r.region_name) p.platform_name, r.region_name
  FROM video_games.platform p JOIN video_games.game_platform gp ON p.id = gp.platform_id
  JOIN video_games.region_sales rs ON gp.id = rs.game_platform_id JOIN video_games.region
  r ON rs.region_id = r.id;
test_31: SELECT r.region_name, SUM(rs.num_sales) AS total_sales FROM video_games.region_sales
  rs JOIN video_games.game_platform gp ON rs.game_platform_id = gp.id JOIN video_games.region
  r ON rs.region_id = r.id GROUP BY r.region_name;
test_32: SELECT r.region_name, MIN(gp.release_year) AS first_release_year FROM video_games.region
  r LEFT JOIN video_games.region_sales rs ON r.id = rs.region_id LEFT JOIN video_games.game_platform
  gp ON rs.game_platform_id = gp.id GROUP BY r.region_name;
test_33: "SELECT DISTINCT p.publisher_name, plat.platform_name \nFROM video_games.publisher\
  \ p \nJOIN video_games.game_publisher gp ON p.id = gp.publisher_id \nJOIN video_games.game_platform\
  \ gp2 ON gp.game_id = gp2.game_id \nJOIN video_games.platform plat ON gp2.platform_id\
  \ = plat.id \nGROUP BY p.publisher_name, plat.platform_name;"
test_34: SELECT game_name FROM video_games.game INNER JOIN video_games.genre ON game.genre_id
  = genre.id WHERE genre_name = 'Fighting';
test_35: SELECT g.game_name FROM video_games.game g LEFT JOIN video_games.genre gn
  ON g.genre_id = gn.id WHERE gn.genre_name != 'Adventure' OR gn.genre_name IS NULL
test_36: SELECT DISTINCT g.id AS game_id, g.game_name AS game_title, p.publisher_name
  AS publisher FROM video_games.game g LEFT JOIN video_games.game_publisher gp ON
  g.id = gp.game_id LEFT JOIN video_games.publisher p ON gp.publisher_id = p.id WHERE
  p.publisher_name = '3DO';
test_37: SELECT p.platform_name, MIN(gp.release_year) AS first_release_year FROM video_games.platform
  p JOIN video_games.game_platform gp ON p.id = gp.platform_id GROUP BY p.platform_name
  ORDER BY p.platform_name;
test_38: "SELECT genre_name, COUNT(game.id) AS game_count \nFROM video_games.game\
  \ \nJOIN video_games.genre ON game.genre_id = genre.id \nGROUP BY genre_name \n\
  ORDER BY game_count ASC \nLIMIT 1;"
test_39: SELECT genre.genre_name AS genre, COUNT(game.id) AS game_count FROM video_games.game
  JOIN video_games.genre ON game.genre_id = genre.id GROUP BY genre.id, genre.genre_name
  ORDER BY game_count DESC LIMIT 1;
test_4: SELECT * FROM video_games.platform;
test_40: "WITH pc_sales AS (\n    SELECT \n      r.region_name,\n      rs.num_sales,\n\
  \      ROW_NUMBER() OVER (ORDER BY rs.num_sales DESC) AS rank\n    FROM \n     \
  \ video_games.region_sales rs\n    JOIN \n      video_games.game_platform gp ON\
  \ rs.game_platform_id = gp.id\n    JOIN \n      video_games.platform p ON gp.platform_id\
  \ = p.id\n    JOIN \n      video_games.region r ON rs.region_id = r.id\n    WHERE\
  \ \n      p.platform_name = 'PC'\n  )\n  SELECT region_name FROM pc_sales WHERE\
  \ rank = 1;"
test_41: "WITH sales AS (\n  SELECT \n    r.region_name,\n    COALESCE(SUM(rs.num_sales)\
  \ OVER (PARTITION BY r.id), 0) AS total_sales,\n    RANK() OVER (ORDER BY COALESCE(SUM(rs.num_sales)\
  \ OVER (PARTITION BY r.id), 0)) AS sales_rank\n  FROM video_games.region_sales rs\n\
  \  JOIN video_games.game_platform gp ON rs.game_platform_id = gp.id\n  JOIN video_games.platform\
  \ p ON gp.platform_id = p.id\n  JOIN video_games.region r ON rs.region_id = r.id\n\
  \  WHERE p.platform_name IN ('PS2', 'PS3')\n  GROUP BY r.region_name, r.id\n)\n\
  SELECT region_name AS region, total_sales\nFROM sales\nWHERE sales_rank = 1;"
test_42: select * from not_exists_table
test_43: 'SELECT genre_name, num_games FROM (SELECT g.genre_name, COUNT(DISTINCT game_id)
  AS num_games FROM video_games.game g JOIN video_games.genre gn ON g.genre_id = gn.id
  GROUP BY g.genre_name) AS counts WHERE num_games = (SELECT MAX(num_games) FROM (SELECT
  g.genre_name, COUNT(DISTINCT game_id) AS num_games FROM video_games.game g JOIN
  video_games.genre gn ON g.genre_id = gn.id GROUP BY g.genre_name) AS max_counts)
  OR num_games = (SELECT MIN(num_games) FROM (SELECT g.genre_name, COUNT(DISTINCT
  game_id) AS num_games FROM video_games.game g JOIN video_games.genre gn ON g.genre_id
  = gn.id GROUP BY g.genre_name) AS min_counts);

  '
test_44: select * from not_exists_table
test_45: select * from not_exists_table
test_46: select * from not_exists_table
test_47: select * from not_exists_table
test_48: SELECT p.publisher_name, COUNT(g.id) as total_games FROM video_games.publisher
  p JOIN video_games.game_publisher gp ON p.id = gp.publisher_id JOIN video_games.game_platform
  gpf ON gp.id = gpf.game_publisher_id WHERE gpf.platform_id IN (SELECT id FROM video_games.platform
  WHERE platform_name IN ('PS2', 'PS3')) GROUP BY p.publisher_name ORDER BY total_games
  DESC;
test_49: SELECT p.platform_name, COUNT(gp.id) as game_count FROM video_games.game_platform
  gp JOIN video_games.platform p ON gp.platform_id = p.id GROUP BY p.id ORDER BY game_count
  DESC;
test_5: SELECT region_id, region_name FROM video_games.region WHERE region_name ILIKE
  '%Business%' OR region_name ILIKE '%Office%' OR region_name ILIKE '%Corp%' OR region_name
  ILIKE '%Commercial%' OR region_name ILIKE '%Bussiness%' OR region_name ILIKE '%Center%'
  OR region_name ILIKE '%Enterprise%' OR region_name ILIKE '%Company%' OR region_name
  ILIKE '%Solutions%'
test_50: "SELECT p.platform_name, COUNT(g.id) AS total_games FROM video_games.game\
  \ g\n  JOIN video_games.game_platform gp ON g.id = gp.game_publisher_id\n  JOIN\
  \ video_games.platform p ON gp.platform_id = p.id\n  GROUP BY p.platform_name\n\
  \  ORDER BY total_games ASC\n  LIMIT 5;"
test_6: SELECT genre_name FROM video_games.genre WHERE genre_name LIKE 'R%'
test_7: SELECT g.id, g.game_name, genre.genre_name FROM video_games.game g JOIN video_games.genre
  ON g.genre_id = genre.id WHERE genre.id = 8;
test_8: SELECT game.id AS game_id, game.game_name AS game_name, genre.genre_name AS
  genre_name FROM video_games.game LEFT JOIN video_games.genre ON game.genre_id =
  genre.id WHERE genre.id > 3 AND genre.id < 10;
test_9: SELECT COUNT(*) FROM video_games.genre;
